{"file":"/Users/splincode/Downloads/Develop/autowired/projects/autowired/src/lib/utils/inject-token.ts","mappings":";;AAAA,wCAAqF;AAGrF,SAAgB,WAAW,CAAI,MAAc,EAAE,GAAQ,EAAE,KAAwB;IAC/E,MAAM,IAAI,GAAW,GAAG,CAAC,QAAQ,EAAE,CAAC;IACpC,MAAM,IAAI,GAAW,KAAK,IAAI,QAAQ,CAAC;IAEvC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC9B,CAAC,IAAI,CAAC,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,KAAK;YACjB,YAAY,EAAE,IAAI;SACnB;QACD,CAAC,IAAI,CAAC,EAAE;YACN,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,IAAI;YAClB,GAAG;gBACD,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;oBACd,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;iBACnB;gBAED,IAAI,CAAC,IAAI,CAAC,GAAG,wBAAe,CAAI,KAAK,CAAC,CAAC;gBACvC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;YACpB,CAAC;SACF;KACF,CAAC,CAAC;AACL,CAAC;AAvBD,kCAuBC","names":[],"sources":["/Users/splincode/Downloads/Develop/autowired/projects/autowired/src/lib/utils/inject-token.ts"],"sourcesContent":["import { InjectionToken, ɵɵdirectiveInject as directiveInject } from '@angular/core';\nimport { Key } from '../interfaces/internals';\n\nexport function injectToken<T>(target: Object, key: Key, token: InjectionToken<T>): void {\n  const name: string = key.toString();\n  const hash: string = `#_${name}_token`;\n\n  Object.defineProperties(target, {\n    [hash]: {\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    [name]: {\n      enumerable: true,\n      configurable: true,\n      get(): T {\n        if (this[hash]) {\n          return this[hash];\n        }\n\n        this[hash] = directiveInject<T>(token);\n        return this[hash];\n      }\n    }\n  });\n}\n"],"version":3}