e89cf0d181796f655b363aee921a00ec
"use strict";

/* istanbul ignore next */
function cov_28cyf3nr6s() {
  var path = "/Users/splincode/Downloads/Develop/autowired/projects/autowired/src/public-api.ts";
  var hash = "631be4c3aef5b7e20fca5bb6c80cc8d6c5ecca93";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/splincode/Downloads/Develop/autowired/projects/autowired/src/public-api.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 6,
          column: 28
        },
        end: {
          line: 6,
          column: 75
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 52
        }
      },
      "3": {
        start: {
          line: 8,
          column: 28
        },
        end: {
          line: 8,
          column: 75
        }
      },
      "4": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 52
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "631be4c3aef5b7e20fca5bb6c80cc8d6c5ecca93"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_28cyf3nr6s = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_28cyf3nr6s();
cov_28cyf3nr6s().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * Public API Surface of autowired
 */

var autowired_decorator_1 =
/* istanbul ignore next */
(cov_28cyf3nr6s().s[1]++, require("./lib/decorators/autowired.decorator"));

/* istanbul ignore next */
cov_28cyf3nr6s().s[2]++;
exports.Autowired = autowired_decorator_1.Autowired;
var qualifier_decorator_1 =
/* istanbul ignore next */
(cov_28cyf3nr6s().s[3]++, require("./lib/decorators/qualifier.decorator"));

/* istanbul ignore next */
cov_28cyf3nr6s().s[4]++;
exports.Qualifier = qualifier_decorator_1.Qualifier;