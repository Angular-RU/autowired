15c790053a5187f213086c9ef1924f35
"use strict";

/* istanbul ignore next */
function cov_2r1slfjcid() {
  var path = "/Users/splincode/Downloads/Develop/autowired/projects/autowired/src/lib/utils/ensure-injectable-type-meta.ts";
  var hash = "dbd46613a889c756c8e310d1670a19459c26012c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/splincode/Downloads/Develop/autowired/projects/autowired/src/lib/utils/ensure-injectable-type-meta.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "ensureInjectableTypeMeta",
        decl: {
          start: {
            line: 3,
            column: 9
          },
          end: {
            line: 3,
            column: 33
          }
        },
        loc: {
          start: {
            line: 3,
            column: 42
          },
          end: {
            line: 5,
            column: 1
          }
        },
        line: 3
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 11
          },
          end: {
            line: 4,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 11
          },
          end: {
            line: 4,
            column: 29
          }
        }, {
          start: {
            line: 4,
            column: 33
          },
          end: {
            line: 4,
            column: 37
          }
        }],
        line: 4
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dbd46613a889c756c8e310d1670a19459c26012c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2r1slfjcid = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2r1slfjcid();
cov_2r1slfjcid().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

function ensureInjectableTypeMeta(target) {
  /* istanbul ignore next */
  cov_2r1slfjcid().f[0]++;
  cov_2r1slfjcid().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_2r1slfjcid().b[0][0]++, target.constructor) ||
    /* istanbul ignore next */
    (cov_2r1slfjcid().b[0][1]++, null)
  );
}

/* istanbul ignore next */
cov_2r1slfjcid().s[2]++;
exports.ensureInjectableTypeMeta = ensureInjectableTypeMeta;